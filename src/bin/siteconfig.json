{
  "sspai": {
    "site": "https://sspai.com",
    "name": "少数派",
    "siteconfig": {
      "getTitle": "self.bs.find('div', {'id': 'article-title', 'class': 'title'}).get_text()",
      "getContent": "re.sub('Matrix 首页推荐\\xa0Matrix\\xa0是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点，少数派仅对标题和排版略作修改。|\\xa0> 下载 少数派 2.0 客户端、关注 少数派公众号，解锁全新阅读体验 \uD83D\uDCF0> 实用、好用的 正版软件，少数派为你呈现 \uD83D\uDE80', '', re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'content wangEditor-txt minHeight'})))))",
      "getLeadAuthor": "self.bs.find('div', {'class': 'ss__user__nickname'}).get_text()",
      "getChargeCount": "self.bs.find('span', {'class': 'count vm'}).get_text()",
      "getDate": "self.bs.find('div', {'class': 'timer'}).get_text()",
      "getTags": "self.bs.find('a', {'class': 'tag'}).get_text()",
      "getCommentCount": "re.compile(r'\\d+').findall(self.bs.find('div', {'class': 'comment_title'}).get_text())[0]",
      "getRelatedArticles": "self.bs.findAll('div', {'class': 'title text_ellipsis2'})"
    }
  },
  "ithome": {
    "site": "https://www.ithome.com",
    "name": "IT之家",
    "siteconfig": {
      "getTitle": "self.bs.find('h1').get_text()",
      "getContent": "re.sub(r'广告声明：文内含有的对外跳转链接（包括不限于超链接、二维码、口令等形式），用于传递更多信息，节省甄选时间，结果仅供参考，IT之家所有文章均包含本声明。', '', re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'post_content'})))))",
      "getLeadAuthor": "self.bs.find('a', {'class': 'avatar'}).find('span').get_text()",
      "getDate": "self.bs.find('span', {'class': 'pubtime_baidu'}).get_text()",
      "getCommentCount": "self.bs.find('span', {'id': 'commentcount'}).get_text()"
    }
  },
  "gmw": {
    "site": "http://www.gmw.cn",
    "name": "光明网",
    "siteconfig": {
      "getTitle": "self.bs.find('h1', {'class': 'u-title'}).get_text()",
      "getContent": "re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'u-mainText'}))))",
      "getLeadAuthor": "re.sub(r'责编：', '', self.bs.find('span', {'class': 'liability'}).get_text())",
      "getDate": "self.bs.find('span', {'class': 'm-con-time'}).get_text()",
      "getSource": "self.bs.find('span', {'class': 'm-con-source'}).find('a').get_text()",
      "getRelatedArticles": "self.bs.find('div', {'class': 'm_zongbian'}).findAll('a')"
    }
  },
  "people": {
    "site": "http://www.people.com.cn",
    "name": "人民网",
    "siteconfig": {
      "getTitle": "self.bs.find('h1').get_text()",
      "getContent": "re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'rm_txt_con cf'}))))",
      "getLeadAuthor": "self.bs.find('h3', {'class': 'pre'}).get_text()",
      "getDate": "self.bs.find('div', {'class': 'col-1-1'}).get_text()",
      "getSource": "self.bs.find('div', {'class': 'col-1-1'}).find('a').get_text()"
    }
  },
  "infzm": {
    "site": "http://www.infzm.com",
    "name": "南方周末",
    "siteconfig": {
      "getTitle": "self.bs.find('h1').get_text()",
      "getContent": "re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'nfzm-content__fulltext  nfzm-content__fulltext--isview '}))))",
      "getLeadAuthor": "self.bs.find('p', {'class': 'nfzm-content__author'}).get_text()",
      "getDate": "self.bs.find('span', {'class': 'nfzm-content__publish'}).get_text()",
      "getSource": "self.bs.find('div', {'class': 'source'}).get_text()",
      "getRelatedArticles": "self.bs.find('div', {'class': 'related'}).findAll('a')"
    }
  },
  "shobserver": {
    "site": "https://www.shobserver.com",
    "name": "上观新闻",
    "siteconfig": {
      "getTitle": "self.bs.find('h1').get_text()",
      "getContent": "re.sub(re.compile('<.*?>'), '', re.sub(re.compile('<h\\d+.*?>|</h\\d+.*?>'), '\\n', str(self.bs.find('div', {'class': 'article-content'}))))",
      "getLeadAuthor": "re.sub(r'作者：', '', self.bs.find('span', {'class': 'author'}).get_text())",
      "getDate": "re.sub(r'日期：', '', self.bs.find('span', {'class': 'publishdate'}).get_text())",
      "getSource": "re.sub(r'来源：', '', self.bs.find('span', {'class': 'source'}).get_text())",
      "getRelatedArticles": "self.bs.find('div', {'class': 'related'}).findAll('a')"
    }
  }
}